<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.pm.workSchedule.dao.ScheduleDAO">
	<insert id="insertWork" parameterType="ScheduleVO">
		<selectKey resultType="String" keyProperty="scId" order="BEFORE">
		SELECT 'SC' || LPAD(NVL(max(substr(SC_ID, 4))+1, 1), 8, 0) 
		FROM SCHEDULE
		</selectKey>
		INSERT INTO SCHEDULE
		(
			SC_ID
			, EMP_ID
			, SC_SDATE
			, SC_EDATE
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(scMemo)">
			, SC_MEMO
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(scSort)">
			, SC_SORT
			</if>
		)
		VALUES
		(
			#{scId}
			, #{empId}
			, TO_DATE(#{scSdate}, 'YYYY-MM-DD HH24:MI:SS')
			, TO_DATE(#{scEdate}, 'YYYY-MM-DD HH24:MI:SS')
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(scMemo)">
			, #{scMemo}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(scSort)">
			, #{scSort}
			</if>
		)
	</insert>
	
	<insert id="insertBatchWork" parameterType="ScheduleBatchVO">
		<selectKey resultType="String" keyProperty="startScId" order="BEFORE">
			SELECT NVL(SUBSTR(MAX(SC_ID), 3), 0)+1
			FROM SCHEDULE
		</selectKey>
		INSERT ALL
			<foreach collection="scheduleList" item="schedule" index="idx">
				INTO SCHEDULE
				(
					SC_ID
					, EMP_ID
					, SC_SDATE
					, SC_EDATE
				)
				VALUES
				(
					('SC' || LPAD(#{startScId}+#{idx}, 8, 0))
					, #{schedule.empId}
					, TO_DATE(#{schedule.scSdate}, 'YYYY-MM-DD HH24:MI:SS')
					, TO_DATE(#{schedule.scEdate}, 'YYYY-MM-DD HH24:MI:SS')
				)
			</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertBatchHoli" parameterType="ScheduleBatchVO">
		<selectKey resultType="String" keyProperty="startScId" order="BEFORE">
			SELECT NVL(SUBSTR(MAX(HOLI_ID), 3), 0)+1
			FROM HOLIDAY
		</selectKey>
		INSERT ALL
			<foreach collection="scheduleList" item="schedule" index="idx">
				INTO HOLIDAY
				(
					HOLI_ID
					, EMP_ID
					, SC_SDATE
					, SC_EDATE
					, SC_SORT
					, SC_REQDATE
				)
				VALUES
				(
					('H' || LPAD(#{startScId}, 8, 0))
					, #{schedule.empId}
					, TO_DATE(#{schedule.scSdate}, 'YYYY-MM-DD HH24:MI:SS')
					, TO_DATE(#{schedule.scEdate}, 'YYYY-MM-DD HH24:MI:SS')
					, #{schedule.scSort}
					, SYSDATE
				)
			</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertBatchHoliForSchedule" parameterType="HoliVO">
		<selectKey resultType="String" keyProperty="startScId" order="BEFORE">
			SELECT NVL(SUBSTR(MAX(SC_ID), 3), 0)+1
			FROM SCHEDULE
		</selectKey>
		INSERT ALL
			<foreach collection="collection" item="schedule" index="idx">
				INTO SCHEDULE
				(
					SC_ID
					, EMP_ID
					, SC_SDATE
					, SC_EDATE
					, SC_SORT
				)
				VALUES
				(
					('SC' || LPAD(#{startScId}+#{idx}, 8, 0))
					, #{schedule.empId}
					, TO_DATE(#{schedule.scSdate}, 'YYYY-MM-DD HH24:MI:SS')
					, TO_DATE(#{schedule.scEdate}, 'YYYY-MM-DD HH24:MI:SS')
					, #{schedule.scSort}
				)
			</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<update id="minusEmpHoli" parameterType="HoliVO">
		UPDATE EMPLOYEE
		SET 
		EMP_HOLI = EMP_HOLI - #{scheduleLength}
		WHERE 
		EMP_ID = #{empId}
	</update>
	
	<select id="checkWork" parameterType="ScheduleVO" resultType="int">
		SELECT count(sc_id)
		FROM SCHEDULE
		WHERE TO_CHAR(SC_SDATE, 'YYYY-MM-DD') = #{scSdate}
		AND EMP_ID = #{empId}
		AND SC_SORT IS NULL
	</select>
	
	<update id="updateWork" parameterType="ScheduleVO">
		UPDATE SCHEDULE
		SET
			EMP_ID = #{empId}
			, SC_SDATE = TO_DATE(#{scSdate}, 'YYYY-MM-DD HH24:MI:SS')
			, SC_EDATE = TO_DATE(#{scEdate}, 'YYYY-MM-DD HH24:MI:SS')
			, SC_MEMO = #{scMemo}
		WHERE SC_ID = #{scId}
	</update>
	
	<delete id="deleteWork" parameterType="ScheduleVO">
		DELETE FROM SCHEDULE
		WHERE SC_ID = #{scId}
	</delete>
	
	<select id="selectOneSchedule" parameterType="string" resultType="ScheduleVO">
		SELECT sc_id ,sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
   			, TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , emp_id ,sc_memo
		    , (SELECT EMP_NAME FROM EMPLOYEE WHERE EMP_ID = A.EMP_ID) emp_name
		    , (SELECT EMP_NO FROM EMPLOYEE WHERE EMP_ID = A.EMP_ID) emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
   		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A
		WHERE SC_ID = #{scId}
	
	</select>
	
	<select id="monthSchedule" parameterType="ScheduleSearchVO" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE (INSTR(#{searchMonth}, TO_CHAR(SC_SDATE, 'YYYY/MM')) > 0 
			OR INSTR(#{searchMonth}, TO_CHAR(add_months(SC_SDATE,-1), 'YYYY/MM')) > 0
			OR INSTR(#{searchMonth}, TO_CHAR(add_months(SC_SDATE,1), 'YYYY/MM')) > 0)
		AND A.EMP_ID IN 
			(
			<foreach collection="empList" item="emp" separator=",">
				#{emp.empId}
			</foreach>
			)
		AND A.SC_SORT IS NULL
	</select>
	
	<select id="allWorkSchedule" parameterType="ScheduleSearchVO" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE A.EMP_ID IN 
			(
			<foreach collection="empList" item="emp" separator=",">
				#{emp.empId}
			</foreach>
			)
		AND A.SC_SORT IS NULL
	</select>
	
	<select id="myAllWorkSchedule" parameterType="ScheduleSearchVO" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE A.EMP_ID = #{empId}
		AND A.SC_SORT IS NULL
	</select>
	
	<select id="allHoliSchedule" parameterType="ScheduleSearchVO" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE A.EMP_ID IN 
			(
			<foreach collection="empList" item="emp" separator=",">
				#{emp.empId}
			</foreach>
			)
		AND A.SC_SORT IN ('amHoli', 'pmHoli', 'full')
	</select>
	
	<select id="myAllHoliSchedule" parameterType="String" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE A.EMP_ID = #{empId}
		AND A.SC_SORT IN ('amHoli', 'pmHoli', 'full')
	</select>
	
	<select id="monthSchedule_Batch" parameterType="ScheduleBatchVO" resultType="ScheduleVO">
		SELECT A.sc_id ,A.sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , A.emp_id ,sc_memo
		    , NVL(B.emp_name, '퇴사자') EMP_NAME
		    , B.emp_no
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE A LEFT OUTER JOIN EMPLOYEE B ON (A.EMP_ID = B.EMP_ID)
		WHERE (INSTR(#{searchMonth}, TO_CHAR(SC_SDATE, 'YYYY/MM')) > 0 
			OR INSTR(#{searchMonth}, TO_CHAR(add_months(SC_SDATE,-1), 'YYYY/MM')) > 0
			OR INSTR(#{searchMonth}, TO_CHAR(add_months(SC_SDATE,1), 'YYYY/MM')) > 0)
		AND A.EMP_ID IN 
			(
			<foreach collection="empIds" item="emp" separator=",">
				#{emp}
			</foreach>
			)
		AND A.SC_SORT IS NULL
	</select>
	
	
	<resultMap type="PmEmpVO" id="empMonthMap" autoMapping="true">
		<id property="empId" column="EMP_ID"/>
		<collection property="scheduleList" ofType="ScheduleVO" autoMapping="true">
			<id property="scId" column="SC_ID"/>
		</collection>
	</resultMap>
	
	<select id="monthScheduleForExcel" parameterType="ScheduleSearchVO" resultMap="empMonthMap">
		SELECT 
	        A.emp_id
	        , EMP_NAME
	        , EMP_DEP
	        , EMP_NO
	        , B.sc_id ,B.sc_sort 
	        , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
	        , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
	        , sc_memo
	        , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
	        , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
	    FROM  EMPLOYEE A LEFT OUTER JOIN SCHEDULE B ON (A.EMP_ID = B.EMP_ID)
	    WHERE INSTR(#{searchMonth}, TO_CHAR(SC_SDATE, 'YYYY/MM')) > 0 
	    
	    ORDER BY EMP_NAME, SC_SDATE 
	</select>
	
	<select id="workEmpList" resultType="EmployeeVO">
		SELECT EMP_ID, EMP_NAME, EMP_ADD1
			 , EMP_ADD2, EMP_HP, EMP_MAIL
			 , MEM_ROLE, EMP_DEP, EMP_BIR, EMP_SDATE
			 , EMP_EDATE, EMP_NO, EMP_HOLI
		FROM EMPLOYEE
		WHERE EMP_EDATE IS NULL
	</select>
	
	<select id="retireEmpList" resultType="EmployeeVO">
		SELECT EMP_ID, EMP_NAME, EMP_ADD1
			 , EMP_ADD2, EMP_HP, EMP_MAIL
			 , MEM_ROLE, EMP_DEP, EMP_BIR, EMP_SDATE
			 , EMP_EDATE, EMP_NO, EMP_HOLI
		FROM EMPLOYEE
		WHERE EMP_EDATE IS NOT NULL
	</select>
	
	<select id="holiday_Batch" resultType="ScheduleVO" parameterType="String">
		SELECT 
			sc_id ,sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , sc_memo
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		FROM SCHEDULE
		WHERE SC_SORT in ('full', 'amHoli', 'pmHoli')
		AND EMP_ID = #{empId}
		ORDER BY SC_SDATE
	</select>
	

	
	<resultMap type="HoliVO" id="holiList" autoMapping="true">
		<id property="holiId" column="HOLI_ID"/>
		<collection property="reqList" ofType="HoliVO" autoMapping="true">
			<id property="holiId" column="HOLI_ID"/>
			<id property="scSdate" column="SC_SDATE"/>
		</collection>
	</resultMap>
	
	<select id="holiday_requestList" parameterType="String" resultMap="holiList">
		SELECT 
			HOLI_ID ,sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , sc_memo
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		    , EMP_ID
		    , TO_CHAR(SC_REQDATE, 'YYYY-MM-DD HH24:MI') SC_REQDATE
		    , SC_STATE
		FROM HOLIDAY
		WHERE EMP_ID = #{empId}
		ORDER BY HOLI_ID DESC, SC_SDATE ASC
	</select>
	
	<select id="allEmp_requestList" resultMap="holiList">
		SELECT 
			HOLI_ID ,sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD') sc_edate
		    , sc_memo
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		    , EMP_ID
		    , (SELECT EMP_NO FROM EMPLOYEE WHERE EMP_ID = A.EMP_ID) EMP_NO
		    , (SELECT EMP_NAME FROM EMPLOYEE WHERE EMP_ID = A.EMP_ID) EMP_NAME
		    , TO_CHAR(SC_REQDATE, 'YYYY-MM-DD HH24:MI') SC_REQDATE
		    , SC_STATE
		FROM HOLIDAY A
		ORDER BY HOLI_ID DESC, SC_SDATE ASC
	</select>
	
	<update id="updateHolidayState" parameterType="HoliVO">
		UPDATE HOLIDAY
		SET
		SC_STATE = #{scState}
		WHERE HOLI_ID = #{holiId}
	</update>
	
	<select id="selectHolidayByHoliId" parameterType="String" resultType="HoliVO">
		SELECT 
			HOLI_ID ,sc_sort 
		    , TO_CHAR(sc_sdate, 'YYYY-MM-DD HH24:MI') sc_sdate
		    , TO_CHAR(sc_edate, 'YYYY-MM-DD HH24:MI') sc_edate
		    , sc_memo
		    , TO_CHAR(sc_sdate, 'HH24:MI') sc_stime
		    , TO_CHAR(sc_edate, 'HH24:MI') sc_etime
		    , EMP_ID
		FROM HOLIDAY
		WHERE HOLI_ID = #{holiId}
		ORDER BY SC_SDATE
	</select>
	
	<select id="getEmpIdByHoliId" parameterType="String" resultType="String">
		SELECT DISTINCT emp_id
		FROM HOLIDAY
		WHERE HOLI_ID = #{holiId}
	</select>
	
</mapper>